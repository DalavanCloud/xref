{
  "definitions": {
    "archive type": "archive-type",
    "archive type pattern matching algorithm": "archive-type-pattern-matching-algorithm",
    "audio or video type": "audio-or-video-type",
    "audio or video type pattern matching algorithm": "audio-or-video-type-pattern-matching-algorithm",
    "binary data byte": "binary-data-byte",
    "byte": "byte",
    "byte pattern": "byte-pattern",
    "byte sequence": "byte-sequence",
    "check-for-apache-bug flag": "check-for-apache-bug-flag",
    "compute an mp3 frame size": "compute-an-mp3-frame-size",
    "computed mime type": "computed-mime-type",
    "context": "context",
    "context-specific sniffing algorithm": "context-specific-sniffing-algorithm",
    "converted to ascii lowercase": "converted-to-ascii-lowercase",
    "font type": "font-type",
    "font type pattern matching algorithm": "font-type-pattern-matching-algorithm",
    "image type": "image-type",
    "image type pattern matching algorithm": "image-type-pattern-matching-algorithm",
    "match an mp3 header": "match-an-mp3-header",
    "matches the signature for mp3 without id3": "matches-the-signature-for-mp3-without-id3",
    "matches the signature for mp4": "matches-the-signature-for-mp4",
    "matches the signature for webm": "matches-the-signature-for-webm",
    "matching a padded sequence": "matching-a-padded-sequence",
    "mime type": "mime-type",
    "mime type portion": "mime-type-portion",
    "mime type sniffing algorithm": "mime-type-sniffing-algorithm",
    "no-sniff flag": "no-sniff-flag",
    "parameters": "parameters",
    "parsable mime type": "parsable-mime-type",
    "parse a mime type": "parse-a-mime-type",
    "parse a vint": "parse-a-vint",
    "parse an mp3 frame": "parse-an-mp3-frame",
    "parsed mime type": "parsed-mime-type",
    "pattern mask": "pattern-mask",
    "pattern matching algorithm": "pattern-matching-algorithm",
    "read the resource header": "read-the-resource-header",
    "resource": "resource",
    "resource header": "resource-header",
    "rules for distinguishing if a resource is a feed or html": "rules-for-distinguishing-if-a-resource-is-a-feed-or-html",
    "rules for distinguishing if a resource is text or binary": "rules-for-text-or-binary",
    "rules for identifying an unknown mime type": "rules-for-identifying-an-unknown-mime-type",
    "rules for sniffing audio and video specifically": "rules-for-sniffing-audio-and-video-specifically",
    "rules for sniffing fonts specifically": "rules-for-sniffing-fonts-specifically",
    "rules for sniffing images specifically": "rules-for-sniffing-images-specifically",
    "rules for sniffing in a plugin context": "rules-for-sniffing-in-a-plugin-context",
    "rules for sniffing in a script context": "rules-for-sniffing-in-a-script-context",
    "rules for sniffing in a style context": "rules-for-sniffing-in-a-style-context",
    "scriptable mime type": "scriptable-mime-type",
    "serialize a mime type": "serialize-a-mime-type",
    "serialized mime type": "serialized-mime-type",
    "sniff-scriptable flag": "sniff-scriptable-flag",
    "subtype": "subtype",
    "supplied mime type": "supplied-mime-type",
    "supplied mime type detection algorithm": "supplied-mime-type-detection-algorithm",
    "supported by the user agent": "supported-by-the-user-agent",
    "tag-terminating byte": "tag-terminating-byte",
    "type": "type",
    "whitespace byte": "whitespace-byte",
    "xml type": "xml-type",
    "zip-based type": "zip-based-type"
  },
  "url": "https://mimesniff.spec.whatwg.org/#"
}
